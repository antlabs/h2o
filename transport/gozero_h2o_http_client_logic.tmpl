package {{.PackageName}}

import (
	"context"

  "github.com/antlabs/deepcopy"
  "{{.GoZeroBaseURL}}/{{.PackageName}}"
  hc{{.PackageName}}  "{{.HTTPClientBaseURL}}/{{.PackageName}}"
	"github.com/zeromicro/go-zero/core/logx"
)

{{- $RpcName := .Func.RpcName}}
{{- $ReqName := .Func.ReqName}}
{{- $RespName := .Func.RespName}}
type {{$RpcName}}Logic struct {
	ctx    context.Context
	svcCtx *svc.ServiceContext
	logx.Logger
}

func New{{$RpcName}}Logic(ctx context.Context,svcCtx *svc.ServiceContext) *{{$RpcName}}Logic {
	return &{{$RpcName}}Logic{
		ctx:    ctx,
		svcCtx: svcCtx,
		Logger: logx.WithContext(ctx),
	}
}

func (l *{{$RpcName}}Logic) {{$RpcName}} (in *{{.PackageName}}.{{$ReqName}}) (*{{.PackageName}}.{{$RespName}}, error) {
  var req hc{{.PackageName}}.{{$RpcName}}Req
  var url {{.PackageName}}.{{.URLStruct}}
  deepcopy.Copy(&url, &in.URL).Do()
  deepcopy.Copy(&req, in).Do()
  resp, err := {{.PackageName}}.{{$RpcName}}Ctx(req)
  if err != nil {
    return nil, err
  }

  var out {{.PackageName}}.{{$RespName}}Resp
  deepcopy.Copy(&out, resp).Do()
	return out, nil
}

